#!/usr/bin/env bash
set -euo pipefail

readonly db_name="demo"
readonly db_user="postgres"
readonly test_user="test"
readonly test_pass="testpass"
readonly demo_zip="demo-big.zip"
readonly demo_sql="demo-big.sql"
readonly output_dir="/var/www/html"
readonly csv_file="${output_dir}/flights_march.csv"
readonly html_file="${output_dir}/index.html"

# –°–∫–∞—á–∞—Ç—å –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å SQL
if [ ! -f "/tmp/${demo_sql}" ]; then
  echo "üì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–µ–º–æ-—Å—Ö–µ–º—ã..."
  wget -O "/tmp/${demo_zip}" https://edu.postgrespro.ru/demo-big.zip
  unzip "/tmp/${demo_zip}" -d /tmp
  found_sql=$(find /tmp -name "demo-big-*.sql" | head -n 1 || true)
  [ -z "$found_sql" ] && echo "‚ùå SQL-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω" && exit 1
  mv "$found_sql" "/tmp/${demo_sql}"

  # –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ SQL
  sed -i '/DROP DATABASE/Id' "/tmp/${demo_sql}"
  sed -i '/CREATE DATABASE/Id' "/tmp/${demo_sql}"
fi

# –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã
psql -U "$db_user" -d postgres -v ON_ERROR_STOP=1 <<-SQL
  DROP DATABASE IF EXISTS ${db_name};
  CREATE DATABASE ${db_name};
SQL

psql -U "$db_user" -d "$db_name" -v ON_ERROR_STOP=1 -f "/tmp/${demo_sql}"
psql -U "$db_user" -d "$db_name" -v ON_ERROR_STOP=1 -c "CREATE EXTENSION IF NOT EXISTS vector;"

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Å CSV-–≤—ã–≤–æ–¥–æ–º
psqlc() {
  psql -U "$db_user" -d "$db_name" -t -A -F',' -c "$1"
}

# SQL-–∑–∞–ø—Ä–æ—Å—ã
readonly q_dbs="SELECT datname FROM pg_database;"
readonly q_users="SELECT usename FROM pg_user;"
readonly q_privs="SELECT grantee||':'||table_name||':'||privilege_type FROM information_schema.role_table_grants;"
readonly q_columns="SELECT table_name || '.' || column_name FROM information_schema.columns WHERE table_schema='public' ORDER BY table_name, ordinal_position;"
readonly q_march="SELECT * FROM flights WHERE scheduled_departure BETWEEN '2025-03-01' AND '2025-03-31'"

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
res_dbs=$(psqlc "$q_dbs")
res_users=$(psqlc "$q_users")
res_privs=$(psqlc "$q_privs")
res_columns=$(psqlc "$q_columns")
res_count=$(psqlc "SELECT COUNT(*) FROM flights WHERE scheduled_departure BETWEEN '2017-03-01' AND '2017-03-31';")
res_preview=$(psqlc "$q_march" | head -n 20)

# –°–æ–∑–¥–∞–Ω–∏–µ test-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
psql -U "$db_user" -d "$db_name" <<-SQL
  DO \$\$ BEGIN
    IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname='${test_user}') THEN
      CREATE USER ${test_user} WITH PASSWORD '${test_pass}';
    END IF;
  END\$\$;
  GRANT CONNECT ON DATABASE ${db_name} TO ${test_user};
  GRANT USAGE ON SCHEMA public TO ${test_user};
  GRANT SELECT ON ALL TABLES IN SCHEMA public TO ${test_user};
SQL

echo "üì§ –≠–∫—Å–ø–æ—Ä—Ç CSV..."
psql -U postgres -d demo -c "\copy (
  SELECT *
  FROM flights
  WHERE EXTRACT(MONTH FROM scheduled_departure) = 3
) TO '${csv_file}' WITH CSV HEADER"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML-–≥–∞–π–¥–∞
echo "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML-–≥–∞–π–¥–∞"
cat > "$html_file" <<-HTML
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>PostgreSQL Demo Guide</title>
  <style>
    body { font-family: sans-serif; margin: 40px; line-height: 1.5; }
    h1, h2 { color: #333; }
    pre { background: #f4f4f4; padding: 10px; border-radius: 4px; overflow-x: auto; }
    code { font-family: monospace; }
    a { color: #0066cc; }
  </style>
</head>
<body>
  <h1>PostgreSQL Demo: SQL‚Äë–∑–∞–ø—Ä–æ—Å—ã –∏ Bash‚Äë—Å–∫—Ä–∏–ø—Ç</h1>

  <h2>1. –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö</h2>
  <pre><code>psql -U postgres -d postgres -c "SELECT datname FROM pg_database WHERE datistemplate = false;"</code></pre>

  <h2>2. –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h2>
  <pre><code>psql -U postgres -d postgres -c "SELECT usename FROM pg_user;"</code></pre>

  <h2>3. –ü—Ä–∞–≤–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
  <pre><code>psql -U postgres -d postgres -c "SELECT rolname, rolsuper, rolcreatedb, rolcreaterole, rolreplication FROM pg_roles;"</code></pre>

  <h2>4. –í—Å–µ –ø–æ–ª—è –≤ –±–∞–∑–µ <code>demo</code></h2>
  <pre><code>psql -U postgres -d demo -c "
SELECT table_name, column_name, data_type
  FROM information_schema.columns
 WHERE table_schema = 'bookings';
"</code></pre>

  <h2>5. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>test</code> —Å –ø—Ä–∞–≤–∞–º–∏ —á—Ç–µ–Ω–∏—è</h2>
  <pre><code>-- –µ—Å–ª–∏ —é–∑–µ—Ä —É–∂–µ –µ—Å—Ç—å, —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç
DO $$
BEGIN
  IF NOT EXISTS (
    SELECT 1 FROM pg_catalog.pg_roles WHERE rolname = 'test'
  ) THEN
    CREATE ROLE test WITH LOGIN PASSWORD 'testpassword';
  END IF;
END
$$;
GRANT CONNECT ON DATABASE demo TO test;
GRANT USAGE, SELECT ON ALL TABLES IN SCHEMA public TO test;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO test;
</code></pre>

  <h2>6. –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—ë—Ç–∞—Ö –∑–∞ –º–∞—Ä—Ç</h2>
  <pre><code>psql -U postgres -d demo -c "
  SELECT *
  FROM flights
 WHERE EXTRACT(MONTH FROM scheduled_departure) = 3;"</code></pre>

  <h2>7. –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV –∏ –∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞</h2>
  <pre><code>docker-compose up -d
docker-compose exec db bash /scripts/execute_queries.sh</code></pre>

  <h2>8. –ì–æ—Ç–æ–≤—ã–π CSV</h2>
  <p><a href="flights_march.csv">–°–∫–∞—á–∞—Ç—å flights_march.csv</a></p>

  <hr>
  <p>–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–∫—Ä–∏–ø—Ç—ã –º–æ–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫ ‚Äî –æ–Ω–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–µ–π –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é—Ç CSV.</p>
</body>
</html>
HTML

# –ü—Ä–∞–≤–∞ (–µ—Å–ª–∏ root)
[ "$(id -u)" = "0" ] && chown -R www-data:www-data "$output_dir"

echo "‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ. –û—Ç–∫—Ä–æ–π http://localhost —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"