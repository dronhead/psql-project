#!/usr/bin/env bash
set -euo pipefail

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
readonly DB_NAME="demo"
readonly DB_USER="postgres"
readonly TEST_USER="test"
readonly TEST_PASS="testpass"
readonly SQL_SOURCE="/tmp/demo.sql"
readonly OUTPUT_DIR="/var/www/html"
readonly CSV_FILE="${OUTPUT_DIR}/flights_march.csv"
readonly HTML_FILE="${OUTPUT_DIR}/index.html"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
pg_exec() {
    psql -U "${DB_USER}" -d postgres -v ON_ERROR_STOP=1 -c "$1"
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
initialize_database() {
    echo "üõ† –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    pg_exec "SELECT pg_terminate_backend(pg_stat_activity.pid)
             FROM pg_stat_activity
             WHERE pg_stat_activity.datname = '${DB_NAME}';" || true

    # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –±–∞–∑—É
    pg_exec "DROP DATABASE IF EXISTS ${DB_NAME};"
    pg_exec "CREATE DATABASE ${DB_NAME};"

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    psql -U "${DB_USER}" -d "${DB_NAME}" -f "${SQL_SOURCE}"

    # –°–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
    pg_exec "CREATE EXTENSION IF NOT EXISTS vector;"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
main() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è SQL-—Ñ–∞–π–ª–∞
    if [ ! -f "${SQL_SOURCE}" ]; then
        echo "‚ùå –û—à–∏–±–∫–∞: SQL-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${SQL_SOURCE}"
        exit 1
    fi

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤
    mkdir -p "${OUTPUT_DIR}"
    chown -R www-data:www-data "${OUTPUT_DIR}"

    # –û—á–∏—Å—Ç–∫–∞ SQL-—Ñ–∞–π–ª–∞
    sed -i '/DROP DATABASE/Id; /CREATE DATABASE/Id; /^\\connect/d' "${SQL_SOURCE}"

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    initialize_database

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
    psql -U "${DB_USER}" -d "${DB_NAME}" <<-SQL
        DO \$\$ BEGIN
            IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname='${TEST_USER}') THEN
                CREATE USER ${TEST_USER} WITH PASSWORD '${TEST_PASS}';
            END IF;
        END \$\$;
        GRANT CONNECT ON DATABASE ${DB_NAME} TO ${TEST_USER};
        GRANT USAGE ON SCHEMA bookings TO ${TEST_USER};
        GRANT SELECT ON ALL TABLES IN SCHEMA bookings TO ${TEST_USER};
SQL

    # –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    echo "üì§ –≠–∫—Å–ø–æ—Ä—Ç CSV..."
    psql -U "${DB_USER}" -d "${DB_NAME}" -c "\copy (
        SELECT *
        FROM flights
        WHERE scheduled_departure BETWEEN '2017-03-01' AND '2017-03-31'
    ) TO '${CSV_FILE}' WITH (FORMAT CSV, HEADER);"

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    generate_report
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML-–æ—Ç—á–µ—Ç–∞
generate_report() {
    echo "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML-–≥–∞–π–¥–∞..."

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
    psqlc() {
        psql -U "${DB_USER}" -d "${DB_NAME}" -t -A -F',' -c "$1"
    }

    # –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö
    local q1_res=$(psqlc "SELECT datname FROM pg_database WHERE datistemplate = false;")
    local q2_res=$(psqlc "SELECT usename FROM pg_user;")
    local q3_res=$(psqlc "SELECT grantee, privilege_type, table_name FROM information_schema.role_table_grants;")
    local q4_res=$(psqlc "SELECT table_name, column_name, data_type FROM information_schema.columns WHERE table_schema = 'bookings';")
    local q5_res=$(psqlc "SELECT COUNT(*) FROM flights WHERE scheduled_departure BETWEEN '2017-03-01' AND '2017-03-31';")

    # –°–æ–∑–¥–∞–Ω–∏–µ HTML-—Ñ–∞–π–ª–∞
    cat > "${HTML_FILE}" <<-HTML
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>PostgreSQL Demo Guide</title>
    <style>
        body { font-family: sans-serif; margin: 40px; line-height: 1.6; }
        h1, h2 { color: #2c3e50; }
        .example { background: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 5px; }
        pre { background: #2c3e50; color: white; padding: 15px; border-radius: 5px; overflow-x: auto; }
        .result { background: #e9ecef; padding: 15px; margin: 10px 0; border-radius: 5px; }
        a { color: #3498db; text-decoration: none; }
    </style>
</head>
<body>
    <h1>üìö –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–∞–±–æ—Ç–µ —Å PostgreSQL</h1>

    <div class="example">
        <h2>1. –°–ø–∏—Å–æ–∫ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö</h2>
        <pre>SELECT datname FROM pg_database WHERE datistemplate = false;</pre>
    </div>

    <div class="example">
        <h2>2. –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h2>
        <pre>SELECT usename FROM pg_user;</pre>
    </div>

    <div class="example">
        <h2>3. –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞</h2>
        <pre>SELECT grantee, privilege_type, table_name FROM information_schema.role_table_grants;</pre>
    </div>

    <div class="example">
        <h2>4. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü</h2>
        <pre>SELECT table_name, column_name, data_type
FROM information_schema.columns
WHERE table_schema = 'bookings';</pre>
    </div>

    <div class="example">
        <h2>5. –î–∞–Ω–Ω—ã–µ –∑–∞ –º–∞—Ä—Ç 2017</h2>
        <pre>SELECT COUNT(*) FROM flights
WHERE scheduled_departure BETWEEN '2017-03-01' AND '2017-03-31';</pre>
        <p><a href="flights_march.csv">üóÑ –°–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (CSV)</a></p>
    </div>

    <div class="example">
        <h2>6. –ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
        <pre>CREATE USER ${TEST_USER} WITH PASSWORD '${TEST_PASS}';
GRANT CONNECT ON DATABASE ${DB_NAME} TO ${TEST_USER};
GRANT SELECT ON ALL TABLES IN SCHEMA bookings TO ${TEST_USER};</pre>
    </div>
</body>
</html>
HTML

    echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
main
